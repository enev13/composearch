version: "3"

services:
  web:
    build:
      context: .
    volumes:
      - .:/app
    expose:
      - 8000
    env_file:
      - .env
    depends_on:
      - db
      - redis
    ports:
      - 8000:8000
    entrypoint: poetry run
    command: >
      sh -c "poetry run python3 manage.py collectstatic --noinput &&
        poetry run python3 manage.py migrate &&
        poetry run python3 manage.py flush --no-input &&
        poetry run python3 manage.py loaddata distributors.json &&
        gunicorn --bind 0.0.0.0:8000 composearch.wsgi --timeout 60 --workers 3"
    restart: always

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./certs:/etc/nginx/certs
    ports:
      - 80:80
      # - 443:443
    depends_on:
      - web
    restart: always

  db:
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env
    restart: always
    ports:
      - 5432:5432

  redis:
    image: redis:latest
    restart: always
    ports:
      - 6379:6379

volumes:
  postgres_data:
